// Class /Script/FortniteAI.FortAthenaAIBotPerceptionDigestedSkillSet
// Size: 0x348
class UFortAthenaAIBotPerceptionDigestedSkillSet : public UFortAthenaAIBotDigestedSkillSet
{
	float SightReactionTime; // 0x30 (0x4)
	float SightRandomDeviation; // 0x34 (0x4)
	unsigned char unreflected_38[0x28]; // 0x38 (0x28) 
	struct TArray<struct FDigestedSightReactionSpecialization> SightReactionSpecializations; // 0x60 (0x10)
	float LoseSightTime; // 0x70 (0x4)
	float LoseSightRandomDeviation; // 0x74 (0x4)
	float SightSuspicionTime; // 0x78 (0x4)
	float SightSuspicionRandomDeviation; // 0x7c (0x4)
	float EnemyMarkedReactionTime; // 0x80 (0x4)
	float EnemyMarkedReactionRandomDeviation; // 0x84 (0x4)
	float ChancesToHelpOnMarkedEnemy; // 0x88 (0x4)
	float DamageReactionTime; // 0x8c (0x4)
	float DamageRandomDeviation; // 0x90 (0x4)
	float HearingReactionTime; // 0x94 (0x4)
	float HearingRandomDeviation; // 0x98 (0x4)
	float MaxHearingLocationError; // 0x9c (0x4)
	float ObstacleDistanceOverrideTargetingSq; // 0xa0 (0x4)
	float ObstacleForgetDistanceSq; // 0xa4 (0x4)
	float ObstacleMinimumBlockingTime; // 0xa8 (0x4)
	unsigned char unreflected_ac[0x4]; // 0xac (0x4) 
	struct FFortAthenaAIBotDigestedTargetHeuristicSettings DefaultTargetHeuristicSettings; // 0xb0 (0x188)
	struct TArray<struct FFortAthenaAIBotDigestedTargetHeuristicSettingsSpecialization> TargetHeuristicsSettingsSpecializations; // 0x238 (0x10)
	struct FSoundPerceptionDigestedSetting SoundSettings[0x7]; // 0x248 (0xc) (ARRAY) 
	float AlertedAccumulatedLoudnessLimit; // 0x29c (0x4)
	float AlertedAccumulatedDamageLimit; // 0x2a0 (0x4)
	float LKPAccumulatedLoudnessLimit; // 0x2a4 (0x4)
	float EnemyMarkingDelay; // 0x2a8 (0x4)
	float EnemyMarkingDelayRandomDeviation; // 0x2ac (0x4)
	float AdditionalMarkedEnemyLKPForgetTime; // 0x2b0 (0x4)
	float AdditionalMarkedEnemyLKPForgetDistance; // 0x2b4 (0x4)
	struct FAlertLevelInfo AlertLevelInfos[0x4]; // 0x2b8 (0x10) (ARRAY) 
	float ProjectileThreatForgetTime; // 0x2f8 (0x4)
	struct FTrapPerceptionSettings TrapPerceptionSettings; // 0x2fc (0x14)
	bool bStealthMeterEnable; // 0x310 (0x1)
	unsigned char unreflected_311[0x3]; // 0x311 (0x3) 
	float StealthMeterThreshold; // 0x314 (0x4)
	struct FScalableFloat StealthMeterIncreaseSpeed; // 0x318 (0x28)
	float StealthMeterDecreaseSpeed; // 0x340 (0x4)
	bool bStealthMeterAllowSharedTarget; // 0x344 (0x1)
	bool bStealthMeterForceLKPWhenDamagedAndThreatened; // 0x345 (0x1)
	unsigned char padding_346[0x2]; // 0x346 (0x2)
};

